# Generated by Django 2.0.2 on 2018-05-13 18:14

import DjangoUeditor.models
import ckeditor_uploader.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='文章标题')),
                ('abstract', models.CharField(blank=True, default='这篇文章没有摘要', max_length=120, verbose_name='文章摘要')),
                ('cover', models.ImageField(blank=True, max_length=255, null=True, upload_to='articles/%Y/%m/', verbose_name='文章封面')),
                ('content', DjangoUeditor.models.UEditorField(blank=True, default='', verbose_name='文章内容')),
                ('wordcount', models.IntegerField(default=0, verbose_name='文章字数')),
                ('clicknum', models.IntegerField(default=0, verbose_name='点击量')),
                ('favornum', models.IntegerField(default=0, verbose_name='收藏量')),
                ('commtnum', models.IntegerField(default=0, verbose_name='评论量')),
                ('addtime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='图书名称')),
                ('wordcount', models.IntegerField(default=0, verbose_name='总字数')),
                ('starnums', models.IntegerField(default=0, verbose_name='星级')),
                ('degree', models.CharField(choices=[('cj', '初级'), ('zj', '中级'), ('gj', '高级')], max_length=2, verbose_name='难度')),
                ('abstract', models.CharField(blank=True, default='这本书没有简介', max_length=150, verbose_name='图书简介')),
                ('desc', DjangoUeditor.models.UEditorField(blank=True, default='', verbose_name='图书描述\t')),
                ('cover', models.ImageField(blank=True, max_length=255, null=True, upload_to='books/%Y/%m/', verbose_name='图书封面')),
                ('privacy', models.CharField(choices=[('private', '私密'), ('public', '公开')], max_length=8, verbose_name='权限')),
                ('recommend', models.CharField(choices=[('yes', '推荐到首页'), ('no', '不推荐到首页')], max_length=4, verbose_name='推荐')),
                ('readernum', models.IntegerField(default=0, verbose_name='读者人数')),
                ('clicknum', models.IntegerField(default=0, verbose_name='点击量')),
                ('favornum', models.IntegerField(default=0, verbose_name='收藏量')),
                ('is_banner', models.BooleanField(default=False, verbose_name='是否轮播课程')),
                ('addtime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '图书',
                'verbose_name_plural': '图书',
            },
        ),
        migrations.CreateModel(
            name='BookNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='笔记标题')),
                ('abstract', models.CharField(max_length=120, verbose_name='笔记摘要')),
                ('notes', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='笔记内容')),
                ('privacy', models.CharField(choices=[('private', '私密'), ('public', '公开')], max_length=8, verbose_name='权限')),
                ('cover', models.ImageField(blank=True, max_length=255, null=True, upload_to='notes/%Y/%m/', verbose_name='笔记封面')),
                ('clicknum', models.IntegerField(blank=True, default=0, verbose_name='点击量')),
                ('favornum', models.IntegerField(blank=True, default=0, verbose_name='收藏量')),
                ('commtnum', models.IntegerField(blank=True, default=0, verbose_name='评论量')),
                ('addtime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.Book', verbose_name='图书')),
            ],
            options={
                'verbose_name': '阅读笔记',
                'verbose_name_plural': '阅读笔记',
            },
        ),
        migrations.CreateModel(
            name='BookResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('download', models.FileField(upload_to='books/resources/%Y/%m', verbose_name='资源文件')),
                ('addtime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Book', verbose_name='图书')),
            ],
            options={
                'verbose_name': '图书资源',
                'verbose_name_plural': '图书资源',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catname', models.CharField(max_length=25, verbose_name='类别名称')),
                ('addtime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '类别',
                'verbose_name_plural': '类别',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='章节标题')),
                ('wordcount', models.IntegerField(default=0, verbose_name='章节字数')),
                ('addtime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Book', verbose_name='所属图书')),
            ],
            options={
                'verbose_name': '章节',
                'verbose_name_plural': '章节',
            },
        ),
        migrations.CreateModel(
            name='Epoch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epochname', models.CharField(max_length=25, verbose_name='时代名称')),
                ('addtime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '时代',
                'verbose_name_plural': '时代',
            },
        ),
        migrations.CreateModel(
            name='LanguageKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('langname', models.CharField(max_length=25, verbose_name='语言名称')),
                ('addtime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '语种',
                'verbose_name_plural': '语种',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagname', models.CharField(max_length=25, verbose_name='标签名称')),
                ('addtime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.AddField(
            model_name='booknotes',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.Category', verbose_name='类别'),
        ),
        migrations.AddField(
            model_name='booknotes',
            name='tags',
            field=models.ManyToManyField(blank=True, to='books.Tag', verbose_name='标签'),
        ),
    ]
